name: CI
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: [main, staging, trying]
jobs:
  ci:
    name: CI
    needs: [test, fmt, clippy, docs]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0
  test:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        rust: [1.60.0, nightly]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Test twitch_TYPES
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --all-targets --all-features
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - name: Run fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - name: Run clippy --all-targets --no-default-features
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --locked --all-targets --no-default-features
      - name: Run clippy --all-targets --all-features
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --locked --all-targets --all-features
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: Swatinem/rust-cache@v1
      # We do the following to make sure docs.rs can document properly without anything broken, and that docs are working.
      - name: Run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc --all-features
      - name: Check twitch_types docs
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: "--cfg nightly"
          RUSTFLAGS: "--cfg nightly"
        with:
          command: doc
          args: --locked --no-deps --all-features
  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'release-') || startsWith(github.ref, 'release-')
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Run dry run publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --dry-run --all-features